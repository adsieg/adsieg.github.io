docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convertir le texte en minuscule
docs <- tm_map(docs, content_transformer(tolower))
# Supprimer les nombres
docs <- tm_map(docs, removeNumbers)
# Supprimer les mots vides
docs <- tm_map(docs, removeWords, stopwords("french"))
# Supprimer les ponctuations
docs <- tm_map(docs, removePunctuation)
# Supprimer les espaces vides supplÃ©mentaires
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=500, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
corp <- Corpus(VectorSource(verbatim_rachat_positif))
corp <- tm_map(corp,removeWords,c(stopwords('french'),stopwords('SMART'),'required','responded'))
tdm <- TermDocumentMatrix(corp)
freq.terms <- findFreqTerms(tdm,lowfreq=15)
term.freq <- rowSums(as.matrix(tdm))
term.freq <- subset(term.freq, term.freq >= 15)
frequence <- data.frame(term = names(term.freq), freq = term.freq)
frequence1<-subset(frequence, freq > 9)
ggplot(frequence1, aes(x = term, y = freq)) + geom_bar(stat = "identity") + xlab("Terms") + ylab("Count") + coord_flip() + theme_bw()
freq.terms <- findFreqTerms(tdm,lowfreq=100)
term.freq <- rowSums(as.matrix(tdm))
term.freq <- subset(term.freq, term.freq >= 100)
frequence <- data.frame(term = names(term.freq), freq = term.freq)
frequence1<-subset(frequence, freq > 100)
ggplot(frequence1, aes(x = term, y = freq)) + geom_bar(stat = "identity") + xlab("Terms") + ylab("Count") + coord_flip() + theme_bw()
freq.terms <- findFreqTerms(tdm,lowfreq=100)
term.freq <- rowSums(as.matrix(tdm))
term.freq <- subset(term.freq, term.freq >= 100)
frequence <- data.frame(term = names(term.freq), freq = term.freq)
frequence1<-subset(frequence, freq > 150)
ggplot(frequence1, aes(x = term, y = freq)) + geom_bar(stat = "identity") + xlab("Terms") + ylab("Count") + coord_flip() + theme_bw()
df_tweets<-as.data.frame(verbatim_rachat_positif)
colnames(df_tweets)<-c("text")
tweets_bigrams <- df_tweets %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
head(tweets_bigrams)
tweets_bigrams2<-tweets_bigrams %>%
count(bigram, sort = TRUE)
head(tweets_bigrams2)
library(igraph)
bigrams_separated <- tweets_bigrams %>%
separate(bigram, c("word1", "word2"), sep = " ")
bigrams_filtered <- bigrams_separated %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word)
bigram_counts <- bigrams_filtered %>%
count(word1, word2, sort = TRUE)
head(bigram_counts)
bigram_graph <- bigram_counts %>%
filter(n > 25) %>%
graph_from_data_frame()
bigram_graph
library(ggraph)
set.seed(2017)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
library(randomForest)
fit <- randomForest(evaluation ~ ., data = data, na.action = na.roughfix)
setwd("C:/Users/adsieg/Desktop/Pers_cours/credit_agricole")
my_data <- read_excel("souscript.xlsx")
data<-my_data[,c(3,6,7,8,10,11)]
colnames(data)<-c("caisse","age","produit","lcl_vs_ca","type_produit","evaluation")
data$caisse<-as.factor(data$caisse)
data$age<-as.numeric(data$age)
data$produit<-as.factor(data$produit)
data$lcl_vs_ca<-as.factor(data$lcl_vs_ca)
data$type_produit<-as.factor(data$type_produit)
data$evaluation<-as.factor(data$evaluation)
data$age<-ifelse(data$age<=39,"entre_18_39",
ifelse(data$age>66, "plus_66",
ifelse(data$age<=56 & data$age>39, "entre_40_56","entre_56_66")))
data$age<-as.factor(data$age)
data<-data[,-c(1,3)]
library(randomForest)
fit <- randomForest(evaluation ~ ., data = data, na.action = na.roughfix)
print(fit)
### Classement des variables explicatives ###
varImpPlot(fit)
View(data)
setwd("C:/Users/adsieg/Desktop/Pers_cours/credit_agricole")
my_data <- read_excel("souscript.xlsx")
data<-my_data[,c(3,6,7,8,10,11)]
colnames(data)<-c("caisse","age","produit","lcl_vs_ca","type_produit","evaluation")
data$caisse<-as.factor(data$caisse)
data$age<-as.numeric(data$age)
data$produit<-as.factor(data$produit)
data$lcl_vs_ca<-as.factor(data$lcl_vs_ca)
data$type_produit<-as.factor(data$type_produit)
data$evaluation<-as.factor(data$evaluation)
data$age<-ifelse(data$age<=39,"entre_18_39",
ifelse(data$age>66, "plus_66",
ifelse(data$age<=56 & data$age>39, "entre_40_56","entre_56_66")))
data$age<-as.factor(data$age)
View(data)
fit$importance
fit$importance[order(fit$importance[, 1], decreasing = TRUE), ]
setwd("C:/Users/adsieg/Desktop/Pers_cours/credit_agricole")
my_data <- read_excel("souscript.xlsx")
data<-my_data[,c(3,6,7,8,10,11)]
colnames(data)<-c("caisse","age","produit","lcl_vs_ca","type_produit","evaluation")
data$caisse<-as.factor(data$caisse)
data$age<-as.numeric(data$age)
data$produit<-as.factor(data$produit)
data$lcl_vs_ca<-as.factor(data$lcl_vs_ca)
data$type_produit<-as.factor(data$type_produit)
data$evaluation<-as.factor(data$evaluation)
data$age<-ifelse(data$age<=39,"entre_18_39",
ifelse(data$age>66, "plus_66",
ifelse(data$age<=56 & data$age>39, "entre_40_56","entre_56_66")))
data$age<-as.factor(data$age)
data<-data[,-c(1,3)]
library(randomForest)
fit <- randomForest(evaluation ~ ., data = data, na.action = na.roughfix)
print(fit)
### Classement des variables explicatives ###
varImpPlot(fit)
fit$importance
fit$importance[order(fit$importance[, 1], decreasing = TRUE), ]
varImpPlot(fit)
plot(fit$err.rate[, 1], type = "l", xlab = "nombre d'arbres", ylab = "erreur OOB")
set.seed(123)
plot(fit$err.rate[, 1], type = "l", xlab = "nombre d'arbres", ylab = "erreur OOB", ylim = c(0,0.17))
plot(fit$err.rate[, 1], type = "l", xlab = "nombre d'arbres", ylab = "erreur OOB", ylim = c(0,0.1))
plot(fit$err.rate[, 1], type = "l", xlab = "nombre d'arbres", ylab = "erreur OOB", ylim = c(0,0.20))
set.seed(123)
fit <- randomForest(evaluation ~ ., data = data, ntree = 30,
mtry = 2, na.action = na.roughfix)
print(fit)
library(caret)
set.seed(123)
library("readxl")
library("FactoMineR")
library("factoextra")
setwd("C:/Users/adsieg/Desktop/Pers_cours/credit_agricole")
my_data <- read_excel("souscript.xlsx")
data<-my_data[,c(3,6,7,8,10,11)]
colnames(data)<-c("caisse","age","produit","lcl_vs_ca","type_produit","evaluation")
data$caisse<-as.factor(data$caisse)
data$age<-as.numeric(data$age)
data$produit<-as.factor(data$produit)
data$lcl_vs_ca<-as.factor(data$lcl_vs_ca)
data$type_produit<-as.factor(data$type_produit)
data$evaluation<-as.factor(data$evaluation)
data$age<-ifelse(data$age<=39,"entre_18_39",
ifelse(data$age>66, "plus_66",
ifelse(data$age<=56 & data$age>39, "entre_40_56","entre_56_66")))
data$age<-as.factor(data$age)
View(data)
random_vector<-sample(1:NROW(data),500)
data.active <- data[random_vector,-c(1,3)]
View(data.active)
# Plot the frequency of variable categories
for (i in 1:3) {
plot(data.active[,i], main=colnames(data.active)[i],
ylab = "Count", col="steelblue", las = 2)
}
res.mca <- MCA(data.active, graph = FALSE)
print(res.mca)
eig.val <- get_eigenvalue(res.mca)
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 45))
### 2. Biplot : draw the biplot of individuals and variable categories ---
fviz_mca_biplot(res.mca,
repel = TRUE, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
### 4. Correlation between variables and principal dimensions ---
fviz_mca_var(res.mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
### 5. Coordinates of variable categories ---
head(round(var$coord, 2), 4)
fviz_mca_var(res.mca,
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
fviz_mca_var(res.mca, col.var="black", shape.var = 15,
repel = TRUE)
head(var$cos2, 4)
head(var$cos2, 4)
# Color by cos2 values: quality on the factor map
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
# Change the transparency by cos2 values
fviz_mca_var(res.mca, alpha.var="cos2",
repel = TRUE,
ggtheme = theme_minimal())
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
var <- get_mca_var(res.mca)
var
# Coordinates
head(var$coord)
# Cos2: quality on the factore map
head(var$cos2)
# Cos2 of variable categories on Dim.1 and Dim.2 : create a bar plot of variable cos2
fviz_cos2(res.mca, choice = "var", axes = 1:2)
head(round(var$contrib,2), 4)
# Contributions of rows to dimension 1
fviz_contrib(res.mca, choice = "var", axes = 1, top = 15)
# Contributions of rows to dimension 2
fviz_contrib(res.mca, choice = "var", axes = 2, top = 15)
# Total contribution to dimension 1 and 2
fviz_contrib(res.mca, choice = "var", axes = 1:2, top = 15)
fviz_mca_var(res.mca, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # avoid text overlapping (slow)
ggtheme = theme_minimal()
)
# Change the transparency by contrib values
fviz_mca_var(res.mca, alpha.var="contrib",
repel = TRUE,
ggtheme = theme_minimal())
### 8. Graph of individuals ---
ind <- get_mca_ind(res.mca)
ind
# Coordinates of column points
head(ind$coord)
# Quality of representation
head(ind$cos2)
# Contributions
head(ind$contrib)
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping (slow if many points)
ggtheme = theme_minimal())
# Cos2 of individuals
fviz_cos2(res.mca, choice = "ind", axes = 1:2, top = 20)
# Contribution of individuals to the dimensions
fviz_contrib(res.mca, choice = "ind", axes = 1:2, top = 20)
### 10. Color individuals by groups ---
fviz_mca_ind(res.mca,
label = "none", # hide individual labels
habillage = "evaluation", # color by groups
addEllipses = TRUE, ellipse.type = "confidence",
ggtheme = theme_minimal())
# habillage = index of the column to be used as grouping variable
fviz_mca_ind(res.mca, habillage = 2, addEllipses = TRUE)
# habillage = external grouping variable
fviz_mca_ind(res.mca, habillage = data.active$evaluation, addEllipses = TRUE)
fviz_ellipses(res.mca, c("evaluation", "type_produit"),
geom = "point")
library(readxl)
library(plyr)
setwd("C:/Users/adsieg/Desktop/Pers_cours/credit_agricole/data")
rachat <- read_excel("rachat.xlsx")
rachat$SS_EVENE<-as.factor(rachat$SS_EVENE)
rachat$E4_QSAT<-as.factor(rachat$E4_QSAT)
rachat$AGE<-as.numeric(rachat$AGE)
rachat$E4_QSAT<- revalue(rachat$E4_QSAT, c("Pas du tout"="nÃ©gatif",
"PlutÃ´t pas"="nÃ©gatif",
"Tout Ã  fait"="positif",
"PlutÃ´t"="positif",
"(NSP, ne veut pas rÃ©pondre)"="nÃ©gatif"))
verbatim_rachat_positif<-subset(rachat, E4_QSAT =="positif")
verbatim_rachat_positif<-verbatim_rachat_positif[,c(14:19)]
verbatim_rachat_positif_col1<-as.data.frame(verbatim_rachat_positif[,1])
verbatim_rachat_positif_col2<-as.data.frame(verbatim_rachat_positif[,2])
verbatim_rachat_positif_col3<-as.data.frame(verbatim_rachat_positif[,3])
verbatim_rachat_positif_col4<-as.data.frame(verbatim_rachat_positif[,4])
verbatim_rachat_positif_col5<-as.data.frame(verbatim_rachat_positif[,5])
verbatim_rachat_positif_col6<-as.data.frame(verbatim_rachat_positif[,6])
colnames(verbatim_rachat_positif_col1)<-c("text")
colnames(verbatim_rachat_positif_col2)<-c("text")
colnames(verbatim_rachat_positif_col3)<-c("text")
colnames(verbatim_rachat_positif_col4)<-c("text")
colnames(verbatim_rachat_positif_col5)<-c("text")
colnames(verbatim_rachat_positif_col6)<-c("text")
verbatim_rachat_positif<-rbind(verbatim_rachat_positif_col1,
verbatim_rachat_positif_col2,
verbatim_rachat_positif_col3,
verbatim_rachat_positif_col4,
verbatim_rachat_positif_col5,
verbatim_rachat_positif_col6)
View(verbatim_rachat_positif)
str(verbatim_rachat_positif)
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("plyr")
library("ggplot2")
verbatim_rachat_positif<- gsub("Ã©", "e", verbatim_rachat_positif)
verbatim_rachat_positif<- gsub("Ã ", "a", verbatim_rachat_positif)
verbatim_rachat_positif<- gsub("Ã¨", "e", verbatim_rachat_positif)
verbatim_rachat_positif<- gsub("Ãª", "e", verbatim_rachat_positif)
docs <- Corpus(VectorSource(verbatim_rachat_positif))
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convertir le texte en minuscule
docs <- tm_map(docs, content_transformer(tolower))
# Supprimer les nombres
docs <- tm_map(docs, removeNumbers)
# Supprimer les mots vides
docs <- tm_map(docs, removeWords, stopwords("french"))
# Supprimer les ponctuations
docs <- tm_map(docs, removePunctuation)
# Supprimer les espaces vides supplÃ©mentaires
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=500, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
corp <- Corpus(VectorSource(verbatim_rachat_positif))
corp <- tm_map(corp,removeWords,c(stopwords('french'),stopwords('SMART'),'required','responded'))
tdm <- TermDocumentMatrix(corp)
freq.terms <- findFreqTerms(tdm,lowfreq=150)
term.freq <- rowSums(as.matrix(tdm))
term.freq <- subset(term.freq, term.freq >= 150)
frequence <- data.frame(term = names(term.freq), freq = term.freq)
frequence1<-subset(frequence, freq > 90)
ggplot(frequence1, aes(x = term, y = freq)) + geom_bar(stat = "identity") + xlab("Terms") + ylab("Count") + coord_flip() + theme_bw()
docs <- Corpus(VectorSource(verbatim_rachat_positif))
View(docs)
docs <- Corpus(VectorSource(verbatim_rachat_positif))
verbatim_rachat_positif<- gsub("Ã©", "e", verbatim_rachat_positif)
verbatim_rachat_positif<- gsub("Ã ", "a", verbatim_rachat_positif)
verbatim_rachat_positif<- gsub("Ã¨", "e", verbatim_rachat_positif)
verbatim_rachat_positif<- gsub("Ãª", "e", verbatim_rachat_positif)
verbatim_rachat_positif <- gsub("&", "", verbatim_rachat_positif)
docs <- Corpus(VectorSource(verbatim_rachat_positif))
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
View(verbatim_rachat_positif)
verbatim_rachat_positif<-as.data.frame(verbatim_rachat_positif)
View(verbatim_rachat_positif)
library(readxl)
library(plyr)
setwd("C:/Users/adsieg/Desktop/Pers_cours/credit_agricole/data")
rachat <- read_excel("sinistre.xlsx")
rachat$SS_EVENE<-as.factor(rachat$SS_EVENE)
rachat$E2_QSAT<-as.factor(rachat$E2_QSAT)
rachat$AGE<-as.numeric(rachat$AGE)
rachat$E2_QSAT<- revalue(rachat$E2_QSAT, c("Pas du tout"="nÃ©gatif",
"PlutÃ´t pas"="nÃ©gatif",
"Tout Ã  fait"="positif",
"PlutÃ´t"="positif",
"(NSP, ne veut pas rÃ©pondre)"="nÃ©gatif",
"Pas du tout satisfait(e) de la maniÃ¨re dont s'est dÃ©roulÃ© le versement de ce capital ?"="nÃ©gatif"))
verbatim_rachat_positif<-subset(rachat, E2_QSAT =="positif")
verbatim_rachat_positif<-verbatim_rachat_positif[,c(14:19)]
View(verbatim_rachat_positif)
verbatim_rachat_positif_col1<-as.data.frame(verbatim_rachat_positif[,1])
verbatim_rachat_positif_col2<-as.data.frame(verbatim_rachat_positif[,2])
verbatim_rachat_positif_col3<-as.data.frame(verbatim_rachat_positif[,3])
verbatim_rachat_positif_col4<-as.data.frame(verbatim_rachat_positif[,4])
verbatim_rachat_positif_col5<-as.data.frame(verbatim_rachat_positif[,5])
verbatim_rachat_positif_col6<-as.data.frame(verbatim_rachat_positif[,6])
colnames(verbatim_rachat_positif_col1)<-c("text")
colnames(verbatim_rachat_positif_col2)<-c("text")
colnames(verbatim_rachat_positif_col3)<-c("text")
colnames(verbatim_rachat_positif_col4)<-c("text")
colnames(verbatim_rachat_positif_col5)<-c("text")
colnames(verbatim_rachat_positif_col6)<-c("text")
verbatim_rachat_positif<-rbind(verbatim_rachat_positif_col1,
verbatim_rachat_positif_col2,
verbatim_rachat_positif_col3,
verbatim_rachat_positif_col4,
verbatim_rachat_positif_col5,
verbatim_rachat_positif_col6)
View(verbatim_rachat_positif)
verbatim_rachat_positif<-verbatim_rachat_positif[complete.cases(verbatim_rachat_positif), ]
View(verbatim_rachat_positif)
verbatim_rachat_positif$category<-rep("Rachat",NROW(verbatim_rachat_positif))
View(verbatim_rachat_positif)
library(readxl)
library(plyr)
setwd("C:/Users/adsieg/Desktop/Pers_cours/credit_agricole/data")
library(readxl)
library(plyr)
setwd("C:/Users/adsieg/Desktop/Pers_cours/credit_agricole/data")
rachat <- read_excel("rachat.xlsx")
rachat$SS_EVENE<-as.factor(rachat$SS_EVENE)
rachat$E4_QSAT<-as.factor(rachat$E4_QSAT)
rachat$AGE<-as.numeric(rachat$AGE)
rachat$E4_QSAT<- revalue(rachat$E4_QSAT, c("Pas du tout"="nÃ©gatif",
"PlutÃ´t pas"="nÃ©gatif",
"Tout Ã  fait"="positif",
"PlutÃ´t"="positif",
"(NSP, ne veut pas rÃ©pondre)"="nÃ©gatif",
"Pas du tout satisfait(e) de la maniÃ¨re dont s'est dÃ©roulÃ© le versement de ce capital ?"="nÃ©gatif"))
rachat$E4_QSAT<- revalue(rachat$E4_QSAT, c("Pas du tout"="nÃ©gatif",
"PlutÃ´t pas"="nÃ©gatif",
"Tout Ã  fait"="positif",
"PlutÃ´t"="positif",
"(NSP, ne veut pas rÃ©pondre)"="nÃ©gatif"))
View(rachat)
library(readxl)
library(plyr)
setwd("C:/Users/adsieg/Desktop/Pers_cours/credit_agricole/data")
rachat <- read_excel("rachat.xlsx")
View(rachat)
rachat$SS_EVENE<-as.factor(rachat$SS_EVENE)
rachat$E4_QSAT<-as.factor(rachat$E4_QSAT)
rachat$AGE<-as.numeric(rachat$AGE)
levels(rachat$E4_QSAT)
rachat$E4_QSAT<- revalue(rachat$E4_QSAT, c("Pas du tout"="nÃ©gatif",
"PlutÃ´t pas"="nÃ©gatif",
"Tout Ã  fait"="positif",
"PlutÃ´t"="positif",
"(NSP, ne veut pas rÃ©pondre)"="nÃ©gatif"))
verbatim_rachat_positif<-subset(rachat, E4_QSAT =="positif")
verbatim_rachat_positif<-verbatim_rachat_positif[,c(14:19)]
verbatim_rachat_positif_col1<-as.data.frame(verbatim_rachat_positif[,1])
verbatim_rachat_positif_col2<-as.data.frame(verbatim_rachat_positif[,2])
verbatim_rachat_positif_col3<-as.data.frame(verbatim_rachat_positif[,3])
verbatim_rachat_positif_col4<-as.data.frame(verbatim_rachat_positif[,4])
verbatim_rachat_positif_col5<-as.data.frame(verbatim_rachat_positif[,5])
verbatim_rachat_positif_col6<-as.data.frame(verbatim_rachat_positif[,6])
colnames(verbatim_rachat_positif_col1)<-c("text")
colnames(verbatim_rachat_positif_col2)<-c("text")
colnames(verbatim_rachat_positif_col3)<-c("text")
colnames(verbatim_rachat_positif_col4)<-c("text")
colnames(verbatim_rachat_positif_col5)<-c("text")
colnames(verbatim_rachat_positif_col6)<-c("text")
verbatim_rachat_positif<-rbind(verbatim_rachat_positif_col1,
verbatim_rachat_positif_col2,
verbatim_rachat_positif_col3,
verbatim_rachat_positif_col4,
verbatim_rachat_positif_col5,
verbatim_rachat_positif_col6)
verbatim_rachat_positif<-verbatim_rachat_positif[complete.cases(verbatim_rachat_positif), ]
View(verbatim_rachat_positif)
verbatim_rachat_positif<-as.data.frame(verbatim_rachat_positif)
verbatim_rachat_positif$category<-rep("rachat",NROW(verbatim_rachat_positif))
View(verbatim_rachat_positif)
colnames(verbatim_rachat_positif)<-c("text","category")
write.csv(verbatim_rachat_positif,"text.csv")
setwd("~/")
library(dplyr)
library(tidytext)
install.packages("tidytext")
library(tidytext)
install.packages("SnowballC")
library(dplyr)
install.packages("tidytext")
library(tidytext)
library(snow)
install.packages("janeaustenr")
austen_bigrams <- austen_books() %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
library(janeaustenr)
library(dplyr)
library(tidytext)
install.packages("tidytext")
install.packages("devtools")
devtools::install_github("nicolewhite/RNeo4j")
library(devtools)
install_git("https://github.com/nicolewhite/RNeo4j")
library(devtools)
install_git("https://github.com/nicolewhite/RNeo4j")
install.packages("Rtools")
library(RNeo4j)
install.packages("reticulate")
install_git("https://github.com/nicolewhite/RNeo4j")
install.packages("RNeo4j")
general_news <- news_data %>%
filter(category == general) %>%
select(description)
library(dplyr)
library(tidytext)
library(janeaustenr)
library(igraph)
library(tidyr)
library(ggraph)
setwd("C:/Users/adsieg/Desktop/projet_perso/part_1")
library(data.table)
df<-fread("news.csv", sep = ",", encoding = 'UTF-8', header= TRUE)
general_news <- news_data %>%
filter(category == general) %>%
select(description)
general_news <- df %>%
filter(category == general) %>%
select(description)
general_news <- df %>%
filter(category == "general") %>%
select(description)
View(general_news)
View(general_news)
austen_bigrams <- general_news %>%
unnest_tokens(bigram, description, token = "ngrams", n = 2)
general_news <- df %>%
filter(category == "general") %>%
select(description)
general_news_bigrams <- general_news %>%
unnest_tokens(bigram, description, token = "ngrams", n = 2)
austen_bigrams
